# The (key-)mappings part of this hyprland config.
# The main-config file is `hyprland.conf`
#
# Refer to the hyprland wiki or the egnrse/.config git for more information.
# https://wiki.hyprland.org/Configuring/
# https://github.com/egnrse/configs

## IDEA ##
# $mainMod (SUPER) is for general window management
# ALT is for group/workspace mappings
# Space as a mouse replacement for hyprland stuff (+ALT for the right-button)

###################
### KEYBINDINGS ###
###################
# See https://wiki.hyprland.org/Configuring/Keywords/

$mainMod = SUPER	# Sets "Windows" key as main modifier

# see https://wiki.hyprland.org/Configuring/Binds/ for more infos
# bind = MODS, key, dispatcher, params
# bind[flags]
# eg: bindd = MODS, key, DESCRIPTION, dispatcher, params
# flags:
# 	l: locked, will also work when an input inhibitor (e.g. a lockscreen) is active.
# 	r: release, will trigger on release of a key.
# 	o: longPress, will trigger on long press of a key.
# 	e: repeat, will repeat when held.
# 	n: non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# 	m: mouse, see below.
# 	t: transparent, cannot be shadowed by other binds.
# 	i: ignore mods, will ignore modifiers.
# 	s: separate, will arbitrarily combine keys between each mod/key, see [Keysym combos](#keysym-combos) above.
# 	d: has description, will allow you to write a description for your bind.
# 	p: bypasses the app's requests to inhibit keybinds.

# ========== GENERAL ==========
bindd = $mainMod, Q, open $terminal, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, R, exec, $menuClose || $menu			# close $menu if it is open, else open it
bind = $mainMod, D, exec, $drawer
bind = $mainMod SHIFT, R, exec, $drawer

bind = CTRL_SHIFT, Escape, exec, $sysMonitor
bind = $mainMod CTRL, L, exec, $powerMenu
bind = $mainMod, C, killactive,							# closes the active window (does NOT kill it!)

# close *all* open (wayland) layers with SUPER (make fully work? wlogout,wifiMenu/drawer..)
bindr = SUPER, SUPER_L, exec, $menuClose 
bindr = SUPER, SUPER_L, exec, $drawerClose
bindr = SUPER, SUPER_L, exec, pkill wlogout
bindr = SUPER, SUPER_L, exec, pkill rofi

# old ones
#bind = $mainMod, M, exit,
#bind = $mainMod, M, exec, $powerMenu
#bind = SUPER, ALT_L, exec, $drawer
#bindr = SUPER_ALT, Space, exec, sleep 0.3 && $drawer	# (try to make win resize with keyboard not interact with drawer)


# ========== FOCUS ==========
# switch between windows (movefocus and bring it to the top)
# (also works in floating or maximized workspaces)
bind = ALT, Tab, cyclenext,				# change focus to another window
bind = ALT, Tab, bringactivetotop,		# bring it to the top
bind = ALT_SHIFT, Tab, cyclenext, prev	# change focus to the previous window
bind = ALT_SHIFT, Tab, bringactivetotop	# bring it to the top

# Move focus with mainMod + arrow keys / hjkl (vim controls)
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, j, movefocus, u
bind = $mainMod, k, movefocus, d


# ========== LOOK / WINDOW ==========
bind = $mainMod, P, pin, active		# pin a (floating) window
bind = $mainMod, O, togglesplit,	# change orientation of the split (dwindle)
bind = $mainMod, I, swapsplit,		# swap 2 windows (dwindle)
bind = $mainMod, U, pseudo, 		# toggle pseudo tile (dwindle)
bind = $mainMod, V, togglefloating,	# toggle floating state

bindd = , F11, fullscreen a window, fullscreen, 0
bindd = $mainMod, M, maximize a window (keep borders/bars), fullscreen, 1

# Move/resize windows with mainMod + LMB/RMB and dragging. (or SUPER_ALT/SUPER_ALT_SHIFT + Space and dragging)
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bindm = SUPER_SHIFT, mouse:273, resizewindow 1	# keep aspect ratio
# use Space as an alternative to clicking (Alt+Space is right-click)
bindm = $mainMod, Space, movewindow
#bindm = SUPER_CTRL, Space, resizewindow
bindm = SUPER_ALT, Space, resizewindow
#bindm = SUPER_SHIFT, Space, resizewindow 1	# keep aspect ratio
bindm = SUPER_ALT_SHIFT, Space, resizewindow 1	# keep aspect ratio

# ========== WORKSPACES ==========
# Switch workspaces with mainMod + [0-9] (workspaces 1-10)
# Switch workspaces with mainMod + [F1-F6] (workspaces 11-16)
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

bind = $mainMod, F1, workspace, 11
bind = $mainMod, F2, workspace, 12
bind = $mainMod, F3, workspace, 13
bind = $mainMod, F4, workspace, 14
bind = $mainMod, F5, workspace, 15
bind = $mainMod, F6, workspace, 16

# Move active window to a workspace with mainMod + SHIFT + [0-9]/[F1-F6]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod SHIFT, F1, movetoworkspace, 11
bind = $mainMod SHIFT, F2, movetoworkspace, 12
bind = $mainMod SHIFT, F3, movetoworkspace, 13
bind = $mainMod SHIFT, F4, movetoworkspace, 14
bind = $mainMod SHIFT, F5, movetoworkspace, 15
bind = $mainMod SHIFT, F6, movetoworkspace, 16

# Move active window to a workspace **silently** with mainMod + CTRL + [0-9]/[F1-F6]
bind = $mainMod CTRL, 1, movetoworkspacesilent, 1
bind = $mainMod CTRL, 2, movetoworkspacesilent, 2
bind = $mainMod CTRL, 3, movetoworkspacesilent, 3
bind = $mainMod CTRL, 4, movetoworkspacesilent, 4
bind = $mainMod CTRL, 5, movetoworkspacesilent, 5
bind = $mainMod CTRL, 6, movetoworkspacesilent, 6
bind = $mainMod CTRL, 7, movetoworkspacesilent, 7
bind = $mainMod CTRL, 8, movetoworkspacesilent, 8
bind = $mainMod CTRL, 9, movetoworkspacesilent, 9
bind = $mainMod CTRL, 0, movetoworkspacesilent, 10
bind = $mainMod CTRL, F1, movetoworkspacesilent, 11
bind = $mainMod CTRL, F2, movetoworkspacesilent, 12
bind = $mainMod CTRL, F3, movetoworkspacesilent, 13
bind = $mainMod CTRL, F4, movetoworkspacesilent, 14
bind = $mainMod CTRL, F5, movetoworkspacesilent, 15
bind = $mainMod CTRL, F6, movetoworkspacesilent, 16

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, wsSpecial
bind = $mainMod SHIFT, S, movetoworkspace, special:wsSpecial
bind = $mainMod CTRL, S, movetoworkspacesilent, special:wsSpecial

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1


# ========== SPECIAL KEYS ==========
# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# send CTRL + ` to discord/vesktop (for push (global) to talk)
#bind = CTRL, code:49, sendshortcut, , c, class:^(vesktop)$ # DOES NOT WORK RN
#bind = CTRL, s, sendshortcut, , s, class:^(firefox)$
