# The window/layers/... rules for this hyprland config.
# The main-config file is `hyprland.conf`
#
# Refer to the hyprland wiki or the egnrse/.config git for more information.
# https://wiki.hyprland.org/Configuring/
# https://github.com/egnrse/configs


##############################
### WINDOWS AND WORKSPACES ###
##############################
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

## some workspace filters:
# w[tv1] : one tiled visible window
# w[tg1] : one tiled group
# f[1] : maximized
# f[0] : fullscreen

# Example windowrule (previously v2)
# windowrule = float,class:^(kitty)$,title:^(kitty)$


# customized version of "Smart gaps" / "No gaps when only"
workspace = w[tv1], gapsout:0, gapsin:0
workspace = w[tg1], gapsout:0, gapsin:0
workspace = f[1], gapsout:0, gapsin:0

windowrule = bordersize 0, floating:0, onworkspace:w[t1]
windowrule = bordersize 0, floating:0, onworkspace:w[tg1]
windowrule = bordersize 0, floating:0, onworkspace:f[1]
windowrule = rounding 0, floating:0, onworkspace:f[1]

# make maximize also remove rounding/bordersize for floating windows
windowrule = bordersize 0, floating:1, onworkspace:f[1]
windowrule = rounding 0, floating:1, onworkspace:f[1]


# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# fix floating being too big (fix it to 1920x1080-20(for the waybar))
# still does not work? TODO
windowrule = maxsize 1920 1060, floating:1, fullscreen:0

# fix very small initial window sizes with some windows (not really though)
windowrule = size >100 >5%, class:.*, floating:1

###################
### LAYER RULES ###
###################

# blur layers
layerrule = blur, (.*)


##############################
### CUSTOMIZE APP/LAYER BEHAVIOR ###
##############################
# window/layer rules that are for specific apps/layers

# 'immediate': windows to allow tearing on (if they are the only thing on screen)
# see 'https://wiki.hyprland.org/Configuring/Tearing/'



## ====== steam (for "steam_proton" windows look bellow) ======

# everything, but the main window floats
windowrule = float, class:steam, title:(Steam\b)?(.+)
windowrule = tile, class:steam, title:Steam
# initial update window
windowrule = center, class:^$, title:^Steam$
windowrule = size 400 129, class:^$, title:^Steam$
# fix very small notification popups
windowrule = size >20% >20%, class:steam,  title:notification(.*), floating:1
# center non notification popups
windowrule = center, class:^(steam(.*))$, title:negative:^(notification.*).*$|^$ floating:1
windowrule = size >20% >20%, class:^(steam(.*))$, title:negative:^(notification.*).*$|^$ floating:1
# launch 'steam_app_(.*)' centered and bigger
windowrule = center, class:^(steam_app_(.*))$
windowrule = size >50% >50%, class:^(steam_app_(.*))$

# warframe (steam)
windowrule = immediate, title:^(Warframe)$, class:^(steam_app_(.*))$	# allow tearing (helps against stutters on nvidia)
#windowrule = tile, title:^(Warframe)$, class:^(steam_app_(.*))$
windowrule = center, title:^(Warframe)$, class:^(steam_app_(.*))$
windowrule = size 1050 645, title:^(Warframe)$, class:^(steam_app_(.*))$
#windowrule = fullscreen, title:^(Warframe)$, class:^(steam_app_(.*))$

# Soulframe (steam)
windowrule = unset, class:steam_app_0, title:Soulframe
windowrule = immediate, class:steam_app_0, title:Soulframe
windowrule = minsize 1030 640, class:steam_app_0, title:Soulframe
windowrule = maxsize 1030 640, class:steam_app_0, title:Soulframe
windowrule = center, class:steam_app_0, title:Soulframe


## ====== steam_proton / bottles ======

# ignore general steam_proton windows
windowrule = unset, class:^(steam_proton)$, xwayland:1
windowrule = nomaxsize, class:^(steam_proton)$, xwayland:1
#windowrule = tile, class:^(steam_proton)$, xwayland:1
# group?
windowrule = size 980 550, class:^(steam_proton)$, title:(Save Live Set As|Save|Open|Add Folder|Select (.*)folder).* xwayland:1

# ableton live 11 (running in bottles over steam_proton)
windowrule = tile , class:^(steam_proton)$, title:(.* - Ableton Live 11 Suite), xwayland:1
windowrule = move onscreen cursor -10 0 , class:^(steam_proton)$, title:(), xwayland:1	# menus
windowrule = maxsize 436 136, class:^(steam_proton)$, title:(Export Audio\.\.\.)	# export popup
# VST plugins:
windowrule = size 1500 900, class:^(steam_proton)$, title:(Vital).*, xwayland:1
windowrule = size 852 565, class:^(steam_proton)$, title:(SPAN).*, xwayland:1
windowrule = size 1265 786, class:^(steam_proton)$, title:(Phase Plant).*, xwayland:1
windowrule = size 907 565, class:^(steam_proton)$, title:(FabFilter Pro-Q 3).*, xwayland:1
windowrule = size 860 625, class:^(steam_proton)$, title:(FabFilter Pro-R).*, xwayland:1
windowrule = size 726 392, class:^(steam_proton)$, title:(FabFilter Saturn).*, xwayland:1
windowrule = size 960 600, class:^(steam_proton)$, title:(FabFilter Pro-L 2).*, xwayland:1
windowrule = size 748 475, class:^(steam_proton)$, title:(FabFilter Pro-C 2).*, xwayland:1
windowrule = size 905 605, class:^(steam_proton)$, title:(FabFilter Pro-MB).*, xwayland:1
windowrule = size 645 445, class:^(steam_proton)$, title:(FabFilter Pro-DS).*, xwayland:1
windowrule = size 625 345, class:^(steam_proton)$, title:(FabFilter Pro-G).*, xwayland:1
windowrule = size 1000 1250, class:^(steam_proton)$, title:(BBC Symphony Orchestra).*, xwayland:1
windowrule = size 885 420, class:^(steam_proton)$, title:(Keyzone Classic).*, xwayland:1
windowrule = size 505 525, class:^(steam_proton)$, title:(FreeClip).*, xwayland:1
windowrule = size 725 465, class:^(steam_proton)$, title:(Multiply).*, xwayland:1
windowrule = size 625 250, class:^(steam_proton)$, title:(La Petite Excite).*, xwayland:1
windowrule = size 555 450, class:^(steam_proton)$, title:(GSnap).*, xwayland:1
# other VST:
windowrule = size 500 490, class:^(steam_proton)$, title:(BL-Denoiser).*, xwayland:1
windowrule = size 700 425, class:^(steam_proton)$, title:(Goyo).*, xwayland:1
# does not work properly
windowrule = size 530 380, class:^(steam_proton)$, title:(iZotope Vinyl).*, xwayland:1


## ====== Wine ======

windowrule = size 410 450, class:winecfg.exe, title:(Wine configuration)
windowrule = center, class:winecfg.exe, title:(Wine configuration)
windowrule = size 390 430, class:explorer.exe, title:Properties for (.*)
windowrule = center, class:explorer.exe, title:Properties for (.*)
windowrule = size >700 >400, class:explorer.exe, title:Desktop
windowrule = center, class:explorer.exe, title:Desktop


## ====== Music ======

# Audacity
# exlude popups: title:^audacity$
windowrule = center, class:^(Audacity)$, title:negative:^audacity$
windowrule = size >20% >20%, class:^(Audacity)$, title:negative:(^Save changes to .*|^audacity|^Audacity is starting up...$)
windowrule = size 244 102, class:^(Audacity)$, title:^Save changes to .*
windowrule = size 550 190, class:^(Audacity)$, title:^Audacity is starting up...$
windowrule = size 510 360, class:^(Audacity)$, title:^Automatic Crash Recovery$
windowrule = size 538 538, class:^(Audacity)$, title:^Export Audio$
windowrule = size 499 453, class:^(Audacity)$, title:^Edit Metadata Tags$
windowrule = size 670 661, class:^(Audacity)$, title:^Compressor - .*
windowrule = size 670 589, class:^(Audacity)$, title:^Limiter - .*


## ====== Documents ======

# LibreOffice
#(loading bar)
windowrule = center, class:^$, title:^LibreOffice$, xwayland:1
windowrule = size 600 200, class:^$, title:^LibreOffice$, xwayland:1


## ====== Games ======

# Minecraft (prism-launcher)
windowrule = tile, class:^(Minecraft(.*)), title:^(Minecraft(.*))
windowrule = size >20% >20%, class:^(Minecraft(.*)), title:^(Minecraft(.*))


## ====== Media ======

# ffplay
windowrule = center, class:ffplay
windowrule = tile, class:ffplay

# krita

windowrule = size 624 552, class:^(krita), title:^((.*) — Krita)
windowrule = center, class:^(krita), title:^((.*) — Krita)
windowrule = size 614 651, class:^(krita), title:^(About Krita)
windowrule = center, class:^(krita), title:^(About Krita)
# destroys popups, but fixes the initial screen
#windowrule = center, class:^(krita), title:^(Krita)
#windowrule = size 855 480, class:^(krita), title:^(Krita)


## ====== OTHER ======


# firefox/waterfox PiP
windowrule = float,class:^(firefox)$,title:^(Picture-in-Picture)$
windowrule = float,class:^(waterfox)$,title:^(Picture-in-Picture)$
windowrule = float,class:^(zen)$,title:^(Picture-in-Picture)$
# audio control
windowrule = float,class:^(org.pulseaudio.pavucontrol)$
windowrule = float,class:^com.saivert.pwvucontrol$
# bluetooth
windowrule = float,class:^(blueman-manager)$
# vesktop/discord Popout
windowrule = float,class:^(vesktop)$,initialTitle:^(Discord Popout)$

# Godot (non editor window)
windowrule = center, class:negative:^(org.godotengine.Editor)$, initialTitle:^(Godot)$
windowrule = size >50% >50%, class:negative:^(org.godotengine.Editor)$, initialTitle:^(Godot)$

# matlab
windowrule = tile, class:^MATLAB R(\d{4})[[:alpha:]] - (.*)$, title:^MATLAB R(\d{4})[[:alpha:]] - (.*)$

# Questa Sim
windowrule = center, class:MtiDialog, title:Restart
windowrule = size 210 254, class:MtiDialog, title:Restart
windowrule = center, class:Toplevel, title:Save Format
windowrule = size 474 168, class:Toplevel, title:Save Format
windowrule = center, class:Dialog, title:Error in Tcl Script
windowrule = size 500 180, class:Dialog, title:Error in Tcl Script
windowrule = center, class:Dialog, title:Quit Vsim
windowrule = size 257 93, class:Dialog, title:Quit Vsim
windowrule = center, class:Dialog, title:^( )$
windowrule = size 300 115, class:Dialog, title:^( )$



# ===== CUSTOM GUIs ======
# Uni
windowrule = size >590 >250, class:Tk, title:(Remote Place Assigner)
windowrule = center, class:Tk, title:(Remote Place Assigner)
windowrule = tile, class:ffplay, title:(out.ppm), xwayland:1
windowrule = tile, class:ffplay, title:(.*[00-99].ppm), xwayland:1
windowrule = size >20% >20%, class:ffplay, title:out.ppm, xwayland:1
windowrule = tile, class:ffplay, title:Stream - rtsp://(.*), xwayland:1
windowrule = size >20% >20%, class:ffplay, title:Stream - rtsp://(.*), xwayland:1



# testing
#windowrule = float, class:Alacritty
#windowrule = size <5% <5%, class:Alacritty

#windowrule = tile, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = noinitialfocus, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = unset, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = fullscreenstate:0 0, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = float, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = size >100% >100%, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = decorate off, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = noblur, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$
#windowrule = nofocus, class:^(org\.kde\.kdeconnect\.daemon)$, title:^(KDE Connect Daemon)$


#layerrule = blur, nwg-drawer
#layerrule = blur, waybar
#layerrule = blur, launcher
