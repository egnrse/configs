## A side Menu ##############
# parts of my tofi config
# https://github.com/egnrse/configs
#
# A complete reference of available options can be found in `man 5 tofi`.

# FONT
	font = /usr/share/fonts/TTF/DejaVuSansMNerdFont-Regular.ttf
	# Point size of text.
	font-size = 14	
	font-features = ""
	font-variations = ""
	# false is faster but uglier
	hint-font = false	

	# All text defaults to this color if not otherwise specified.
	text-color = #FCD4F6

	# All pieces of text have the same theming attributes available:
	# *-color
	# *-background
	# *-background-padding
	#     Background padding in pixels (comma-delimited, CSS-style list).
	#     See "DIRECTIONAL VALUES" under `man 5 tofi` for more info.
	# *-background-corner-radius
	#     Radius of background box corners in pixels

	# prompt-color = #FFFFFF

	placeholder-color = #370F41
	# input-background = #35C1E7
	# default-result-color = #FFFFFF
	# alternate-result-color = #FFFFFF

	selection-color = #35C1E7
	selection-background = #350F3F
	# top, left&right, bottom
	selection-background-padding = 0,-1,0
	selection-background-corner-radius = 3

	# Matching portion of selection text
	#selection-match-color = #00000000

	# Supported values: bar, block, underscore
	text-cursor-style = bar
	# text-cursor-color = #FFFFFF

	# Corner radius of the text cursor
	text-cursor-corner-radius = 0
	# text-cursor-thickness = 2
	# Prompt to display.
	prompt-text = "!"
	# Extra horizontal padding between prompt and input.
	prompt-padding = 8
	placeholder-text = "begin typing ..."
	# Maximum number of results to display.
	# If 0, tofi will draw as many results as it can fit in the window.
	num-results = 0
	# Spacing between results in pixels. Can be negative.
	result-spacing = 2

### Window theming
	# Width and height of the window. Can be pixels or a percentage.
	width = 20%
	height = 50%

	background-color = #180E1EBB
	# Width of the border outlines in pixels.
	outline-width = 1
	outline-color = #1C6579
	# Width of the border in pixels.
	border-width = 1
	border-color = #35C1E7
	corner-radius = 11
	# Padding between borders and text. Can be pixels or a percentage.
	padding-top = 8
	padding-bottom = 3
	padding-left = 5
	padding-right = 5

	# Whether to clip text drawing to be within the specified padding. This
	# is mostly important for allowing text to be inset from the border,
	# while still allowing text backgrounds to reach right to the edge.
	clip-to-padding = true
	# Whether to scale the window by the output's scale factor.
	scale = true

### Window positioning
	# The name of the output to appear on. An empty string will use the
	# default output chosen by the compositor.
	output = ""
	# Supported values: top-left, top, top-right, right, bottom-right,
	# bottom, bottom-left, left, center.
	anchor = top-left

	# Set the size of the exclusive zone.
	# A value of -1 means ignore exclusive zones completely.
	# A value of 0 will move tofi out of the way of other windows' zones.
	# A value greater than 0 will set that much space as an exclusive zone.
	#
	# Values greater than 0 are only meaningful when tofi is anchored to a
	# single edge.
	exclusive-zone = 0
	# Window offset from edge of screen.
	margin-top = 5
	margin-bottom = 0
	margin-left = 5
	margin-right = 0

### Behaviour
#
	# Hide the mouse cursor.
	hide-cursor = false
	text-cursor = true
	# Sort results by number of usages in run and drun modes.
	history = true
	fuzzy-match=true
	# If true, require a match to allow a selection to be made. If false,
	# making a selection with no matches will print input to stdout.
	# In drun mode, this is always true.
	require-match = true
	# If true, automatically accept a result if it is the only one remaining.
	auto-accept-single = false
	# If true, typed input will be hidden, and what is displayed (if
	# anything) is determined by the hidden-character option.
	hide-input = false
	hidden-character = "*"
	# launch programs (don just print them to stdout)
	drun-launch = true
	# If true, allow multiple simultaneous processes.
	multi-instance = false
	# Assume input is plain ASCII, and disable some Unicode handling
	# functions. This is faster, but means e.g. a search for "e" will not
	# match "Ã©".
	ascii-input = false
